- require 'rails_autolink'
- depth = comment.get_depth
%div{ id: "comment-#{comment.id}", class: depth > 0 ? "comment d#{depth}  nested-comment" : "comment d#{depth}" }

  .core
    .avatar
      - if comment.user
        = link_to (image_tag comment.user.avatar(:thumb)), user_path( comment.user )
      - else
        = image_tag "/assets/profiles/avatar_default_48x48.png"
    .content
      .header
        - if comment.user
          %span.name= link_to comment.get_name, user_path( comment.user )
        - else
          %span.name= comment.get_name
        %span.date= format_date(comment.created_at)
        .actions
          - if can? :manage, comment
            = link_to '&times; delete'.html_safe, comment, :method => :delete,
                                                           :class => 'delete-comment',
                                                           :confirm => 'Are you sure?',
                                                           :remote => true 
      .clearfix
      .body
        = markdown auto_link(comment.body)
    - unless comment.body == "This comment has been deleted"
      .reply
        = link_to 'reply', '', class: "reply-link"
        
        .reply-form
          - @comment = Comment.new( commentable_id: comment.id, commentable_type: "Comment" )
          = render partial: "comments/form"

          %script
            $(document).ready( function() {
            $("#comment-#{comment.id}").children(".core").children(".reply").children(".reply-link").toggle( function() {
            $("#comment-#{comment.id}").children(".core").children(".reply").children(".reply-form").fadeIn();
            }, 
            function () {
            $("#comment-#{comment.id}").children(".core").children(".reply").children(".reply-form").fadeOut();
            });
            });

  .display-comments
    - if comment.comments.length > 0
      = render :partial => "comments/comment", :collection => comment.comments.order("created_at ASC")
  - if depth == 0
    %hr
